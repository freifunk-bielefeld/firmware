#!/bin/sh /etc/rc.common

START=19


#allow/block access via ssh/https
set_access() {
	local src port default_target target
	local access_from=`uci get -q freifunk.@settings[0].access_from`

	echo "(I) Freifunk: access_from: '$access_from'"

	#remove existing rules
	for src in wan lan freifunk; do
		for port in 22 443; do
			local s="firewall.${src}${port}"
			uci delete -q $s
		done
	done

	find_default_target() {
		local s="$1" src="$2" name

		config_get name "$s" 'name'
		if [ "$src" == "$name" ]; then
			config_get default_target "$s" 'input'
			return 1
		fi
	}

	#add rule to allow/reject ssh/https access
	config_load firewall
	for src in wan lan freifunk; do
		default_target=""
		config_foreach find_default_target 'zone' $src
		list_contains access_from "$src" && target=ACCEPT || target=REJECT
		[ "$target" = "$default_target" ] && continue
		for port in 22 443; do
			local s="firewall.${src}${port}"
			uci set $s=rule
			uci set $s.src=$src
			uci set $s.dest_port=$port
			uci set $s.target=$target
			uci set $s.proto=tcp
		done
	done
}

#batman-adv wants unique MACs for each interface
set_macs() {
	network_set_macaddr() {
		local s="$1"
		local proto

		config_get proto $s "proto"

		if [ $proto = "batadv" ]; then
			#generate and set a random MAC
			uci set network.$s.macaddr=$(echo -n 02; dd bs=1 count=5 if=/dev/random 2>/dev/null |hexdump -v -e '/1 ":%02X"')
		fi
	}

	config_load network
	config_foreach network_set_macaddr interface
}

#create an IPv6 ULA-address based on EUI-64
ula_addr() {
	local prefix=$1
	local mac=$2

	# translate to local administered mac
	a=${mac%%:*} #cut out first hex
	a=$((0x$a ^ 2)) #invert second least significant bit
	a=`printf '%02x\n' $a` #convert back to hex
	mac="$a:${mac#*:}" #reassemble mac

	mac=${mac//:/} # remove ':'
	mac=${mac:0:6}fffe${mac:6:6} # insert ffee
	mac=`echo $mac | sed 's/..../&:/g'` # insert ':'

	# assemble IPv6 address
	echo "${prefix%%::*}:${mac%?}"
}

#set the ULA IPv6 address for br-freifunk based on the MAC
set_ula() {
	local prefix=$(uci get network.globals.ula_prefix)
	local mac=$(uci get network.freifunk.macaddr)

	if [ -n "$mac" -a -n "$prefix" ]; then
		uci delete -q network.freifunk.ip6addr
		uci add_list network.freifunk.ip6addr="$(ula_addr $prefix $mac)/64"
	fi
}

start()
{
	exec >/tmp/freifunk_init.log 2>&1

	echo "(I) Freifunk: start freifunk_init"

	set_access
	set_macs
	set_ula

	echo "(I) Freifunk: done freifunk_init"
}
